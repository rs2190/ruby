# シンボルと文字列の違いとは
# シンボルとよく似ているのが、先ほども出てきた「文字列」です。
# この２つには、どのような違いがあるのかを見ていきましょう。

# シンボルはコロン(:)で定義する
# シンボルでは、文字列の前にコロン(:)を定義します。
# 文字列では、シングルクォーテーション（''）やダブルクォーテーション（""）で囲んで定義します。

# # シンボル
# :プログラミング学習
#   # 文字列
# "プログラミング学習"
# シンボルは書き換えられない
# シンボルは変更することができませんが、文字列は変更可能なオブジェクトです。


# シンボルは一意性がある
# シンボルは同じオブジェクトを参照しています。
# object_idメソッドを使用して確認してみます。

# object_idメソッドは、オブジェクト固有のidを取得することができます。
# このidによって同じオブジェクトを参照しているのか、別のオブジェクトを参照しているのか確認することが出来ます。
# 文字列とシンボルのobject_idを確認してみます。

dog1 = "犬"
dog2 = "犬"

dog3 = :犬
dog4 = :犬

puts "dog1.object_id ="
puts dog1.object_id

puts "dog2.object_id ="
puts dog2.object_id

puts "dog3.object_id ="
puts dog3.object_id

puts "dog4.object_id ="
puts dog4.object_id

# 文字列は、同じobject_idではありませんが
# シンボルは、同じobject_idが割り当てられていますね。
# この結果から、重複した定義を行なった場合、シンボルは同じオブジェクトを参照していることがわかります。
# つまり、シンボルは一意性があるということがわかります。

# シンボルは処理が高速
# 一番初めにもお話ししましたが、 シンボルは整数で管理しているため、文字列より高速に処理が行われます。